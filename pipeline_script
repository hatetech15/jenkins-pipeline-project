pipeline {
    agent any
    environment {
        DIRECTORY_PATH = '/var/lib/jenkins/workspace'
        TESTING_ENVIRONMENT = 'UAT'
        PRODUCTION_ENVIRONMENT = 'TestEnv'
    }
    stages {
        stage('Build') {
            steps {
                echo "Build: Fetching source code from ${env.DIRECTORY_PATH}"
                echo "Build: Compiling the code using Maven"
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Running Unit tests using JUnit"
                echo "Running Integration tests using Mockito"
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo "Analyzing code quality using SonarQube"
                sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo "Conducting security scan using OWASP ZAP"
                
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying to Staging on AWS EC2"
               
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on Staging"
               
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploying to Production on AWS EC2"
               
            }
        }
    }
    post {
        success {
            emailext(
                to: 'bhavishyarane@gmail.com',
                subject: 'Jenkins Pipeline: SUCCESS',
                body: 'The pipeline has successfully completed.',
                attachLog: true
            )
        }
        failure {
            emailext(
                to: 'bhavishyarane@gmail.com',
                subject: 'Jenkins Pipeline: FAILURE',
                body: 'The pipeline has failed. Please check the attached log.',
                attachLog: true
            )
        }
    }
}
